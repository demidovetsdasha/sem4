%Лабараторная работа №2 по дисциплине ЛОИС
%Выполнила Демидовец Д.В.
%Вариант 8(Требуется расставить на шахматной доске пять ферзей 
%так, чтобы все свободные клетки оказались под боем одного из ферзей)
%Дата выполнения 31.05.2024


% Определяем размер доски 8x8
board_size(8).

% Проверяем, что координаты ферзей находятся в пределах доски
valid_position(X, Y) :-
    board_size(Size),  % Получаем размер доски
    between(1, Size, X),  % X находится в пределах от 1 до Size
    between(1, Size, Y).  % Y находится в пределах от 1 до Size
    

% Проверяем, что все клетки под боем одного из ферзей
all_under_attack(Queens) :-
    board_size(Size),  % Получаем размер доски
    forall(
        valid_position(X,Y),  % Перебираем все клетки доски
        under_attack(X, Y, Queens)  % Проверяем, находится ли клетка под атакой хотя бы одного ферзя
    ).

under_attack(X, Y, [queen(QX, QY) | _]) :-
    (X = QX; Y = QY; abs(X - QX) =:= abs(Y - QY)), % Проверяем, находится ли клетка (X, Y) под атакой ферзя (QX, QY)
    !.  % Прерываем дальнейший поиск альтернативных решений после нахождения первого истинного условия

under_attack(X, Y, [_ | Rest]) :-
    under_attack(X, Y, Rest).  % Рекурсивно проверяем, находится ли клетка (X, Y) под атакой оставшихся ферзей

% Генерация комбинаций
combination(0, _, []) :- !. % Если длина комбинации равна нулю (N = 0), то комбинация пустая ([])

combination(N, List, [Elem | Comb]) :-  % Ищем комбинацию длины N из списка List, причем Elem — это первый элемент этой комбинации, а Comb — оставшаяся часть комбинации
    N > 0,
    select(Elem, List, Rest),  % Выбираем элемент из списка
    N1 is N - 1,  % Уменьшаем счетчик
    combination(N1, Rest, Comb).  % Рекурсивно генерируем комбинации


% Выводим позиции ферзей
write_result(Queens) :-
    write('Queens positions: '), nl,  
    write(Queens), nl.  

% Основная программа
queen_positions :-
    board_size(Size),  % Получаем размер доски
    findall(queen(X, Y), (valid_position(X, Y), X < Y), Positions),  % Генерируем все возможные позиции ферзей (каждая клетка не более одного ферзя)
    combination(5, Positions, Queens),  % Генерируем все возможные комбинации из 5 ферзей
    all_under_attack(Queens),  % Проверяем, что все клетки находятся под атакой хотя бы одного ферзя
    write_result(Queens), % Вывод результата
    sleep(10), %Ожидаем 10 секунд
    halt.  % Завершаем программу


% Запуск программы
:- initialization(queen_positions).